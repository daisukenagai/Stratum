---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts'
import { getDatabase } from '../lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import '../styles/global.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
import SearchModal from '../components/SearchModal.astro'
import SearchButton from '../components/SearchButton.astro'
import SiteTitle from '../components/SiteTitle.astro'

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
  layoutPost: boolean
}

const {
  title = '',
  description = '',
  path = '/',
  ogImage = '',
  layoutPost = false
} = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(
  getStaticFilePath('/default-og-image.png'),
  Astro.site
)

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch {
    console.log('Invalid DB custom icon URL: ', database.Icon?.Url)
  }
}

const layoutClass = layoutPost ? 'layout-post' : 'layout-index'
---

<!doctype html>
<html lang='ja' prefix='og: https://ogp.me/ns#'>
  <head>
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <meta name='robots' content='max-image-preview:large' />
    <meta charset='UTF-8' />
    <meta name='generator' content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name='description' content={siteDescription} />
    <link rel='canonical' href={siteURL} />
    <meta property='og:url' content={siteURL} />
    <meta property='og:title' content={siteTitle} />
    <meta property='og:description' content={siteDescription} />
    <meta property='og:site_name' content={database.Title} />
    <meta property='og:image' content={ogImage || siteOGImage} />
    <meta name='twitter:title' content={siteTitle} />
    <meta name='twitter:description' content={siteDescription} />
    <meta name='twitter:card' content='summary_large_image' />
    <meta name='twitter:image' content={ogImage || siteOGImage} />
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      href='https://fonts.googleapis.com/css2?family=Noto+Serif+JP:wght@200..900&display=swap'
      rel='stylesheet'
    />
    <link
      rel='stylesheet'
      href='https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css'
      integrity='sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0'
      crossorigin='anonymous'
    />
  </head>
  <body>
    <div class=`${layoutClass} layout-post w-full h-screen`>
      <header>
        <SiteTitle
          post={database}
          enableLink={true}
          className='py-4 text-center'
        />
      </header>

      <div class='content-wrapper space-y-16'>
        <main>
          <slot name='main-content' />
        </main>

        <footer>
          <slot name='footer-content' />
        </footer>
      </div>

      <aside>
        <slot name='aside-content' />
      </aside>
    </div>
  </body>
</html>
<style>
  .layout-post {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  .layout-post header {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
  }
  .layout-post .content-wrapper {
    flex: 8;
    writing-mode: vertical-rl;
    overflow-y: scroll;
    height: 80%;
    padding: 0 1rem;
  }
  .layout-post aside {
    flex: 1;
  }
  div.cover img {
    display: block;
    width: 100%;
    height: 20vh;
    object-fit: cover;
    object-position: center 60%;
  }
</style>
